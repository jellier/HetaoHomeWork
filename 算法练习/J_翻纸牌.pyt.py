# 五年级一班全体学生做一个游戏，有 n 张纸牌,
# 每张纸牌上分别标注着 1、2、3、4……n个数字，初始时纸牌数字面朝上。
# 全班同学先将 1 的倍数的纸牌翻过来，然后再将 2 的倍数的纸牌再翻过来，一直翻到 n 的倍数的纸牌。
# 统计翻到最后数字面向下的纸牌分别是哪些？

# 例如，有 1、2、3 张纸牌，开始时纸牌数字面朝上，
# 第一次翻转 1 的倍数，将所有序号为 1 的倍数的纸牌翻转；
# 第二次翻转 2 的倍数，将所有序号是 2 的倍数的纸牌再翻转；
# 第三次翻转 3 的倍数，将所有序号是 3 的倍数纸牌再翻转，翻牌到此结束。
# 最后数字面向下的纸牌是序号为 1 的那张。

# 输入格式
# 输入第一行输入数字为 n，表示有 n 张纸牌（n≤10000）。

# 输出格式
# 输出数字面向下的纸牌数字。在同一行输出，两个数字之间用一个空格隔开。
n = int(input())
a = [True]*n
cnt = 1
while cnt <= n:
    for i in range(n):
        if (i+1) % cnt == 0:
            # 这里不能用True或False，而要用取反
            a[i] = not(a[i])

    cnt += 1

for i in range(n):
    if not a[i]:
        print(i + 1, end=' ')
